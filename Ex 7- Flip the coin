#---A D V A N C E D---

import numpy as np
import itertools

def generate(p1):
    # Generates 10000 random zeros and ones where the probability of one is p1
    seq = np.random.choice([0, 1], size=10000, p=[1 - p1, p1])
    return seq

def count(seq):
    # Returns the number of occurrences of 11111 in the sequence
    pattern = (1, 1, 1, 1, 1)
    k = len(pattern)
    iterators = itertools.tee(seq, k)
    
    # Advance the iterators
    for j, it in enumerate(iterators):
        for _ in range(j):
            next(it, None)
    
    count = 0
    for subseq in zip(*iterators):
        if subseq == pattern:
            count += 1
    return count

def main(p1):
    seq = generate(p1)
    return count(seq)

# Test the function with p1 = 2/3
print(main(2 / 3))
